#!/bin/bash

MALFORMED=0
CORRECT=0
INCORRECT=0
ACCEPTED=0
CRASHED=0
TOTAL=0
declare -a FAILED_TESTS=()

GRACE=../../../grace

mark() {
    local name="$1"
    local file="$2"
    local got="$3"
    local expect="$4"
    if [ "$got" ]
    then
        if [ "$got" = "$expect" ]
        then
            eq=
            got=
        else
            eq="->"
        fi
    fi
    local X="$name"
    if [ "$X" = "CORRECT" ]
    then
        X=
    else
        FAILED_TESTS+=("gibbs:errors:$file")
    fi
    printf '%6s  %5s %2s %-6s %14s %s' "$file" "$expect" "$eq" "$got" "$X" "($(($name = $name + 1))/$TOTAL)"
    printf '\n'
}

test_file() {
    rm -f error.tmp
    TOTAL=$((TOTAL + 1))
    local file="$1"
    local top="$(head -n 1 "$file")"
    local short="$(basename -s .grace "$file")"
    if ! grep -q '^// ERROR = ' <<<"$top"
    then
        mark MALFORMED_TEST "$short"
        if ! $GRACE --errors-to-file error.tmp --execution-tree "$file" >/dev/null 2>&1
        then
            if [ -e error.tmp ]
            then
                local code="$(< error.tmp)"
                printf '             -> '
                grep "^$code " ../../../bin/Debug/DefaultErrorMessages.txt || printf '%s\n' "$code"
            else
                CRASHED=$((CRASHED + 1))
                printf '             !! %s\n' "CRASHED"
            fi
        else
            ACCEPTED=$((ACCEPTED + 1))
            printf '             -- %s\n' "ACCEPTED"
        fi
        return
    fi
    read a b c expect rest <<<"$top"
    if $GRACE --errors-to-file error.tmp --execution-tree "$file" >/dev/null 2>&1
    then
        mark ACCEPTED "$short"
        return
    fi
    if ! [ -e error.tmp ]
    then
        mark CRASHED "$short"
        return
    fi
    code=$(< error.tmp)
    if [[ "$code" != "$expect" ]]
    then
        mark INCORRECT "$short" "$code" "$expect"
    else
        mark CORRECT "$short" "$code" "$expect"
    fi
}

summarise() {
    printf '%s\n' '------------------------------------------------'
    printf 'Passed           %i/%i\n' $CORRECT $TOTAL
    printf 'Malformed tests: %i\n' $MALFORMED
    printf 'Incorrect error: %i\n' $INCORRECT
    printf 'No error at all: %i\n' $ACCEPTED
    printf 'Crashed:         %i\n' $CRASHED
}

if [[ "$1" ]]
then
    for x in "$@"
    do
        test_file "$x"
    done
else
    for x in *.grace
    do
        test_file "$x"
    done
fi
summarise
rm -f error.tmp
(
    echo "TOTAL+=$TOTAL" >&3
    echo "PASSED+=$CORRECT" >&3
    echo "FAILED+=$((TOTAL - CORRECT))" >&3
    [ "${#FAILED_TESTS}" -gt 0 ] && echo "FAILED_TESTS+=(${FAILED_TESTS[@]})" >&3
) 2>/dev/null
[ "$CORRECT" = "$TOTAL" ]
